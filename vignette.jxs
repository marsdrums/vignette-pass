<jittershader name="default">
	<description>Default Slab </description>
	<param name="tex0" type="int" default="0" />
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="texDim" type="vec2" state="TEXDIM0" />
	<param name="falloff" type="float" default="0.25" />
	<param name="anamorphic" type="int" default="1" />
	<param name="expand" type="float" default="1.0" />
	<param name="center" type="vec2" default="0.0 0.0" />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="uv" program="vp" />
		<bind param="texDim" program="vp" />
		<bind param="falloff" program="vp" />
		<bind param="anamorphic" program="vp" />
		<bind param="expand" program="fp" />
		<bind param="center" program="vp" />
		<program name="vp" type="vertex"  >
<![CDATA[
#version 330 core

in vec2 uv;
uniform vec2 texDim;
uniform int anamorphic;
uniform float falloff;
uniform vec2 center;

out jit_PerVertex {
	smooth vec2 coord;
	flat float falloff2;
} jit_out;

void main(void) {
	gl_Position = vec4(uv*2 - 1, 0, 1);
	vec2 dim = anamorphic == 1 ? vec2(1.0) : texDim;
	jit_out.coord = (gl_Position.xy - center) * vec2( max(dim.x/dim.y, 1.0), max(dim.y/dim.x, 1.0) );
	jit_out.falloff2 = falloff*falloff;

}
]]>
</program>
<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core

in jit_PerVertex {
	smooth vec2 coord;
	flat float falloff2;
} jit_in;

layout (location = 0) out vec4 outColor;

uniform samplerJit0 tex0;
uniform float expand;


void main(void) {

	vec3 img = texelFetch(tex0, ivec2(gl_FragCoord.xy)).rgb;
	float rf = pow(dot(jit_in.coord, jit_in.coord), expand) * jit_in.falloff2 + 1;
    img *= 1.0 / (rf * rf);

	outColor = vec4(img, 1.0);
}
]]>
</program>
</language>
</jittershader>
